spliceメソッドの使い方
配列に.splice()と記述することで使用可能です。

第1引数は必ず必要です。

操作を開始する配列のインデックスを指定してください。

第1引数の指定のみの場合は、指定したインデックス以降を取り除く動作になります。

例えば、2を指定した場合は、0から始まる配列の要素の3番目を指定したことになり、それ以降の要素を取り除くことが可能です。



第2引数はオプションです。

指定した場合は、指定した数を第1引数で指定した要素以降から取り除きましょう。

例えば、3を指定した場合は、第1引数で指定した要素から3個の要素を取り除きます。



第3引数以降はオプションです。

指定した場合は、その値が配列に追加され、追加する値の数だけ引数を増やすことができます。

例えば、第3引数に’あああ’、第4引数に’いいい’とした場合は、第1引数で指定した要素の位置に’あああ’と’いいい’を追加可能です。


"たとえば、この位置から要素を削除して取り出したいなら、この配列に対して、 splice(9, 1) としてあげれば、インデックスが 9 番目の位置から 1 個の要素を削除して取り出して、その要素を元配列から削除してくれます。"

- - - - - - - - - - - - - - - - - - - - - - - - - - - 
実際に使ってみよう
spliceメソッドの動作をみるために、下記のような1番目〜5番目という文字列を格納した配列をarrayという変数に格納したものを用意します。

let array = ['1番目', '2番目', '3番目', '4番目', '5番目'];
それでは引数の指定方法ごとに動作を見ていきます。

第1引数のみ
指定した要素以降を全て取り除くため、下記のように記述しましょう。

array.splice(2); // ["1番目", "2番目"]


第1引数と第2引数を指定
第1引数で指定した要素から、第2引数で指定した数の分の要素を取り除きます。

array.splice(1,3); // ["1番目", "5番目"]


第1引数〜第3引数を指定
プログラムの動作は、第1引数で指定した要素から、第2引数で指定した数を取り除き、第3引数の値を追加します。

これは第2引数が0の場合は、1つも取り除かずに値を追加するため、間に要素を差し込む動作と同様です。

array.splice(1,0, '差し込み'); // ["1番目", "差し込み", "2番目", "3番目", "4番目", "5番目"]
第2引数が1の場合は、1つを取り除いて、第3引数を追加し、置き換える動作となります。

array.splice(1, 1, '交換'); // ["1番目", "交換", "3番目", "4番目", "5番目"]


第1引数〜第5引数を指定
第3引数の追加する動作と同様です。

この場合では、追加する値が第3引数、第4引数、第5引数の3つになります。